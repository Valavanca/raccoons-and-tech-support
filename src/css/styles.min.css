body,html{font-family:Geneva,Arial,Helvetica,sans-serif;font-size:1.1em;color:#B4B4B4;background-color:#fff;margin:0;padding:0;overflow-x:hidden}a{text-decoration:none}@media (min-width:320px){#header>.login>span,#info>.title{text-transform:uppercase}#header,#header img,.attache>div{vertical-align:middle}#header,.up{text-align:center}#header{width:100%;float:left;margin-left:0;margin-right:0;padding-top:.6em;display:table}#header span{line-height:2em}#header img{height:1.4em;margin:.2em .4em}#header>.logo,#header>.nav{float:left;margin-right:2.85714%}#header>.nav{width:14.28571%}#header>.logo{width:48.57143%}#header>.login{width:31.42857%;float:right;margin-right:0}#header>.login>span{font-size:.7em}.notebook{width:100%;float:left;margin-left:0;margin-right:0;white-space:nowrap;overflow:hidden;padding-top:.6em}.notebook>input{display:none}.notebook>input+label{display:block;background-color:#E5E5E5;padding:.7em;cursor:pointer;position:relative}.notebook>input+label:not(:last-of-type){border-right:none}.notebook>input+label:hover{background-color:#F6F6F6}.notebook>input+label:last-of-type::after{display:block;border-bottom:1px solid gray;width:2000px;content:"";position:absolute;left:100%}#info button.long,footer#new_message button{border:none;box-shadow:0 0 15px rgba(0,0,0,.5);color:#1169E9}.notebook>input:checked+label{background-color:#fff;color:#1169E9;box-shadow:0 0 15px rgba(0,0,0,.5);border-bottom:none}.notebook>input:checked+label:last-of-type::after{bottom:0}.notebook>input:nth-of-type(1):checked~div:nth-of-type(1),.notebook>input:nth-of-type(2):checked~div:nth-of-type(2),.notebook>input:nth-of-type(3):checked~div:nth-of-type(3){display:block}.tab{max-width:90%;margin-left:auto;margin-right:auto;white-space:normal;display:none}.tab:after,head,head:before{display:block}.tab:after{content:" ";clear:both}head{position:fixed;right:10px;top:10px;z-index:999;color:#333;background:rgba(255,255,255,.25)}head:before{content:"|||";padding:5px 10px;font-family:sans-serif;font-size:16px;font-weight:700}head:hover{background:rgba(255,255,255,.5);color:red}head:hover~.tab,head:hover~body .tab{position:relative}head:hover~.tab:before,head:hover~body .tab:before{position:absolute;top:0;left:0;bottom:0;right:0;content:" ";z-index:998;background-image:-webkit-linear-gradient(left,rgba(22,244,22,.15),rgba(95,247,95,.15) 66.66667%,transparent 66.66667%);background-image:linear-gradient(to right,rgba(22,244,22,.15),rgba(95,247,95,.15) 66.66667%,transparent 66.66667%);background-size:8.57143%;background-origin:content-box;background-clip:content-box;background-position:left top}#info{width:100%;float:left;margin-left:0;margin-right:0;border-bottom:1px solid #B4B4B4;margin-bottom:5.71429%}#info strong{color:#B4B4B4}#info button.long{width:65.71429%;float:left;margin-right:2.85714%;font-size:1.1em;background-color:#fff;margin-left:17.14286%;margin-bottom:5.71429%;height:1.7em}#converse,footer#new_message{margin-left:0;border-bottom:1px solid #B4B4B4}#info button.long::before{content:"<<";font-weight:900;margin-right:5.71429%}#converse{width:100%;float:left;margin-right:0;padding-bottom:1em}#converse .avatar{width:22.85714%;float:left;margin-right:2.85714%}#converse .log,#converse .name{display:block;font-weight:600}#converse .message{padding:.3em}#converse .message>.message{background-color:#F6F6F6}#converse .message>.message .avatar{width:22.85714%;float:right;margin-right:0}#converse span.file{font-weight:200;color:#1169E9}footer#new_message{width:100%;float:left;margin-right:0;padding-bottom:1em}footer#new_message span.title{width:100%;float:left;text-align:center;color:#1169E9;text-transform:uppercase;margin:.5em}footer#new_message .avatar{display:none}footer#new_message textarea{width:100%;float:left;margin-left:0;margin-right:0;height:6em}footer#new_message button{background-color:#fff}footer#new_message button[name=submit]{margin:.4em 2.85714% .4em 8.57143%;padding:.4em;width:82.85714%;float:left}.attache{width:100%;float:left;margin-left:0;margin-right:0;position:relative;overflow:hidden;padding:1em 1em 1em 0;height:1.6em}.attache>button{float:right;height:100%}.attache>div{border:1px solid #B4B4B4;font-size:.8em;height:1.8em}.attache input[type=file]{position:absolute;left:0;top:0;width:100%;height:100%;opacity:0;cursor:pointer}.demand{color:red;font-size:.8em;margin:.3em}.up{width:100%;float:left;margin:.4em 0}.up::before{content:"^";font-weight:900;margin-right:.3em}}
/*# sourceMappingURL=data:application/json;base64, */
